<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         metadata-complete="true">
    <module-name>bonappetit-server-spring</module-name>

    <!--Init spring -->
    <context-param>
        <param-name>contextClass</param-name>
        <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
    </context-param>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>com.github.clboettcher.bonappetit.server.spring.ServerConfig</param-value>
    </context-param>

    <!-- Bootstrap the root application context -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!--Init jersey-->
    <servlet>
        <servlet-name>JerseyServlet</servlet-name>
        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>javax.ws.rs.Application</param-name>
            <param-value>com.github.clboettcher.bonappetit.server.jersey.ServerApplication</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!--Standard chain-->
    <servlet-mapping>
        <servlet-name>JerseyServlet</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>

    <!-- Do not scan any third party packages (e.g. Jersey) for additional components. This prevents the
    JerseyServletContainerInitializer from being called which is buggy (assigns incorrect resource config
    to servlets which leads to servlets that answer to the wrong paths. -->
    <absolute-ordering/>
</web-app>
