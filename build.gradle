// External dependency versions (sorted alphabetically)
def versions = [
        // c
        commonsLang3Version: '3.3',

        // g
        guavaVersion       : '18.0',

        // h
        hamcrestVersion    : '1.3',

        // j
        junitVersion       : '4.12',
        sl4fjVersion       : '1.7.12',
        jerseyVersion      : '2.17',

        // l
        logbackVersion     : '1.1.3',

        // s
        springVersion      : '4.1.6.RELEASE'
]

ext {
    // External dependencies that can be included by short name, see also excludes
    libs = [
            // Spring
            'spring-context'     : "org.springframework:spring-context:${versions.springVersion}",
            'spring-core'        : "org.springframework:spring-core:${versions.springVersion}",
            'spring-web'         : "org.springframework:spring-web:${versions.springVersion}",
            'spring-test'        : "org.springframework:spring-test:${versions.springVersion}",

            // Jersey
            'jersey-servlet-core': "org.glassfish.jersey.containers:jersey-container-servlet-core:${versions.jerseyVersion}",
            'jersey-spring3'     : "org.glassfish.jersey.ext:jersey-spring3:${versions.jerseyVersion}",

            // Logging
            logback              : "ch.qos.logback:logback-classic:${versions.logbackVersion}",
            'slf4j-api'          : "org.slf4j:slf4j-api:${versions.sl4fjVersion}",
            'jcl-over-slf4j'     : "org.slf4j:jcl-over-slf4j:${versions.sl4fjVersion}",

            // Utils
            guava                : "com.google.guava:guava:${versions.guavaVersion}",
            'commons-lang3'      : "org.apache.commons:commons-lang3:${versions.commonsLang3Version}",

            // Testing
            junit                : "junit:junit:${versions.junitVersion}",
            hamcrest             : "org.hamcrest:hamcrest-all:${versions.hamcrestVersion}"

    ]
    excludes = [
            'jersey-spring3->spring-beans'   : [group: 'org.springframework', module: 'spring-beans'],
            'spring-context->commons-logging': [group: 'commons-logging', module: 'commons-logging']
    ]
}

// Config for all subprojects
subprojects {
    repositories {
        mavenCentral()
    }

    task 'add-license-headers' << {
        def licenseHeader = new File("${rootProject.projectDir}/LICENSE-header").text
        def srcDir = new File("${project.projectDir}/src")
        println "srcDir: ${srcDir.path}"
        srcDir.eachFileRecurse { file ->
            if (file.name.endsWith(".java") && !file.text.contains(licenseHeader)) {
                println "Adding license header to '${file.path}'"
                // Remove everything before 'package' and overwrite file including license header
                file.text = licenseHeader + '\n' + file.text.substring(file.text.indexOf('package'))
            }
        }
    }
}

